/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Tue Jan 24 21:09:08 2017. */

#ifndef PB_ELEGOO_PB_H_INCLUDED
#define PB_ELEGOO_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Event {
    bool has_Distance;
    int32_t Distance;
    bool has_SensorA;
    bool SensorA;
    bool has_SensorB;
    bool SensorB;
    bool has_SensorC;
    bool SensorC;
/* @@protoc_insertion_point(struct:Event) */
} Event;

typedef struct _Speed {
    bool has_Left;
    int32_t Left;
    bool has_Right;
    int32_t Right;
/* @@protoc_insertion_point(struct:Speed) */
} Speed;

typedef struct _Command {
    bool has_SetSpeed;
    Speed SetSpeed;
    bool has_Stop;
    bool Stop;
/* @@protoc_insertion_point(struct:Command) */
} Command;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Command_init_default                     {false, Speed_init_default, false, 0}
#define Speed_init_default                       {false, 0, false, 0}
#define Event_init_default                       {false, 0, false, 0, false, 0, false, 0}
#define Command_init_zero                        {false, Speed_init_zero, false, 0}
#define Speed_init_zero                          {false, 0, false, 0}
#define Event_init_zero                          {false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Event_Distance_tag                       1
#define Event_SensorA_tag                        2
#define Event_SensorB_tag                        3
#define Event_SensorC_tag                        4
#define Speed_Left_tag                           1
#define Speed_Right_tag                          2
#define Command_SetSpeed_tag                     1
#define Command_Stop_tag                         2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Command_fields[3];
extern const pb_field_t Speed_fields[3];
extern const pb_field_t Event_fields[5];

/* Maximum encoded size of messages (where known) */
#define Command_size                             26
#define Speed_size                               22
#define Event_size                               17

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ELEGOO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
