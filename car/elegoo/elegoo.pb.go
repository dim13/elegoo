// Code generated by protoc-gen-go. DO NOT EDIT.
// source: elegoo.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	elegoo.proto

It has these top-level messages:
	Command
	Event
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command struct {
	SpeedR    int32 `protobuf:"zigzag32,1,opt,name=SpeedR" json:"SpeedR,omitempty"`
	SpeedL    int32 `protobuf:"zigzag32,2,opt,name=SpeedL" json:"SpeedL,omitempty"`
	Stop      bool  `protobuf:"varint,3,opt,name=Stop" json:"Stop,omitempty"`
	Center    bool  `protobuf:"varint,4,opt,name=Center" json:"Center,omitempty"`
	Direction int32 `protobuf:"zigzag32,5,opt,name=Direction" json:"Direction,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Command) GetSpeedR() int32 {
	if m != nil {
		return m.SpeedR
	}
	return 0
}

func (m *Command) GetSpeedL() int32 {
	if m != nil {
		return m.SpeedL
	}
	return 0
}

func (m *Command) GetStop() bool {
	if m != nil {
		return m.Stop
	}
	return false
}

func (m *Command) GetCenter() bool {
	if m != nil {
		return m.Center
	}
	return false
}

func (m *Command) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

type Event struct {
	Distance  uint32 `protobuf:"varint,1,opt,name=Distance" json:"Distance,omitempty"`
	Direction int32  `protobuf:"zigzag32,2,opt,name=Direction" json:"Direction,omitempty"`
	SensorR   bool   `protobuf:"varint,3,opt,name=SensorR" json:"SensorR,omitempty"`
	SensorC   bool   `protobuf:"varint,4,opt,name=SensorC" json:"SensorC,omitempty"`
	SensorL   bool   `protobuf:"varint,5,opt,name=SensorL" json:"SensorL,omitempty"`
	KeyPress  uint32 `protobuf:"varint,6,opt,name=KeyPress" json:"KeyPress,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Event) GetDistance() uint32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *Event) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *Event) GetSensorR() bool {
	if m != nil {
		return m.SensorR
	}
	return false
}

func (m *Event) GetSensorC() bool {
	if m != nil {
		return m.SensorC
	}
	return false
}

func (m *Event) GetSensorL() bool {
	if m != nil {
		return m.SensorL
	}
	return false
}

func (m *Event) GetKeyPress() uint32 {
	if m != nil {
		return m.KeyPress
	}
	return 0
}

func init() {
	proto.RegisterType((*Command)(nil), "Command")
	proto.RegisterType((*Event)(nil), "Event")
}

func init() { proto.RegisterFile("elegoo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xb1, 0x4a, 0xc5, 0x30,
	0x14, 0x86, 0xc9, 0xb5, 0x37, 0xad, 0x07, 0x1d, 0xcc, 0x20, 0x41, 0x1c, 0x4a, 0xa7, 0x4e, 0x2e,
	0xbe, 0x81, 0xad, 0x93, 0x19, 0x24, 0xdd, 0xdc, 0x6a, 0x7b, 0x90, 0x80, 0xcd, 0x29, 0x49, 0x10,
	0x9c, 0x7d, 0x1c, 0x5f, 0x52, 0x1a, 0xd3, 0x56, 0xef, 0x96, 0xef, 0xff, 0xc3, 0xcf, 0xc7, 0x81,
	0x0b, 0x7c, 0xc7, 0x37, 0xa2, 0xbb, 0xd9, 0x51, 0xa0, 0xea, 0x8b, 0x41, 0xde, 0xd0, 0x34, 0xf5,
	0x76, 0x14, 0xd7, 0xc0, 0xbb, 0x19, 0x71, 0xd4, 0x92, 0x95, 0xac, 0xbe, 0xd2, 0x89, 0xb6, 0x5c,
	0xc9, 0xc3, 0x9f, 0x5c, 0x09, 0x01, 0x59, 0x17, 0x68, 0x96, 0x67, 0x25, 0xab, 0x0b, 0x1d, 0xdf,
	0xcb, 0xdf, 0x06, 0x6d, 0x40, 0x27, 0xb3, 0x98, 0x26, 0x12, 0xb7, 0x70, 0xde, 0x1a, 0x87, 0x43,
	0x30, 0x64, 0xe5, 0x31, 0xce, 0xec, 0x41, 0xf5, 0xcd, 0xe0, 0xf8, 0xf8, 0x81, 0x36, 0x88, 0x1b,
	0x28, 0x5a, 0xe3, 0x43, 0x6f, 0x07, 0x8c, 0x16, 0x97, 0x7a, 0xe3, 0xff, 0x1b, 0x87, 0x93, 0x0d,
	0x21, 0x21, 0xef, 0xd0, 0x7a, 0x72, 0x3a, 0x09, 0xad, 0xb8, 0x37, 0x4d, 0x92, 0x5a, 0x71, 0x6f,
	0x54, 0x74, 0xda, 0x1a, 0xb5, 0x78, 0x3c, 0xe1, 0xe7, 0xb3, 0x43, 0xef, 0x25, 0xff, 0xf5, 0x58,
	0xf9, 0x81, 0xbf, 0x64, 0x53, 0x6f, 0xec, 0x2b, 0x8f, 0x27, 0xbc, 0xff, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x78, 0x67, 0x1b, 0x88, 0x52, 0x01, 0x00, 0x00,
}
