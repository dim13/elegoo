// Code generated by protoc-gen-go. DO NOT EDIT.
// source: elegoo.proto

/*
Package elegoo is a generated protocol buffer package.

It is generated from these files:
	elegoo.proto

It has these top-level messages:
	Speed
	Command
	UltraSonic
	InfraRed
	RemoteControl
	Event
*/
package elegoo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Speed struct {
	L         int32  `protobuf:"zigzag32,1,opt,name=L" json:"L,omitempty"`
	R         int32  `protobuf:"zigzag32,2,opt,name=R" json:"R,omitempty"`
	StopAfter uint32 `protobuf:"varint,3,opt,name=StopAfter" json:"StopAfter,omitempty"`
}

func (m *Speed) Reset()                    { *m = Speed{} }
func (m *Speed) String() string            { return proto.CompactTextString(m) }
func (*Speed) ProtoMessage()               {}
func (*Speed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Speed) GetL() int32 {
	if m != nil {
		return m.L
	}
	return 0
}

func (m *Speed) GetR() int32 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *Speed) GetStopAfter() uint32 {
	if m != nil {
		return m.StopAfter
	}
	return 0
}

type Command struct {
	Speed *Speed `protobuf:"bytes,1,opt,name=Speed" json:"Speed,omitempty"`
	Look  int32  `protobuf:"zigzag32,2,opt,name=Look" json:"Look,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Command) GetSpeed() *Speed {
	if m != nil {
		return m.Speed
	}
	return nil
}

func (m *Command) GetLook() int32 {
	if m != nil {
		return m.Look
	}
	return 0
}

type UltraSonic struct {
	Distance  uint32 `protobuf:"varint,1,opt,name=Distance" json:"Distance,omitempty"`
	Direction int32  `protobuf:"zigzag32,2,opt,name=Direction" json:"Direction,omitempty"`
}

func (m *UltraSonic) Reset()                    { *m = UltraSonic{} }
func (m *UltraSonic) String() string            { return proto.CompactTextString(m) }
func (*UltraSonic) ProtoMessage()               {}
func (*UltraSonic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UltraSonic) GetDistance() uint32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *UltraSonic) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

type InfraRed struct {
	R bool `protobuf:"varint,1,opt,name=R" json:"R,omitempty"`
	C bool `protobuf:"varint,2,opt,name=C" json:"C,omitempty"`
	L bool `protobuf:"varint,3,opt,name=L" json:"L,omitempty"`
}

func (m *InfraRed) Reset()                    { *m = InfraRed{} }
func (m *InfraRed) String() string            { return proto.CompactTextString(m) }
func (*InfraRed) ProtoMessage()               {}
func (*InfraRed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *InfraRed) GetR() bool {
	if m != nil {
		return m.R
	}
	return false
}

func (m *InfraRed) GetC() bool {
	if m != nil {
		return m.C
	}
	return false
}

func (m *InfraRed) GetL() bool {
	if m != nil {
		return m.L
	}
	return false
}

type RemoteControl struct {
	Key uint32 `protobuf:"varint,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *RemoteControl) Reset()                    { *m = RemoteControl{} }
func (m *RemoteControl) String() string            { return proto.CompactTextString(m) }
func (*RemoteControl) ProtoMessage()               {}
func (*RemoteControl) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RemoteControl) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

type Event struct {
	TimeStamp uint32         `protobuf:"varint,1,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	Head      *UltraSonic    `protobuf:"bytes,2,opt,name=Head" json:"Head,omitempty"`
	Sensor    *InfraRed      `protobuf:"bytes,3,opt,name=Sensor" json:"Sensor,omitempty"`
	Remote    *RemoteControl `protobuf:"bytes,4,opt,name=Remote" json:"Remote,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Event) GetTimeStamp() uint32 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *Event) GetHead() *UltraSonic {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *Event) GetSensor() *InfraRed {
	if m != nil {
		return m.Sensor
	}
	return nil
}

func (m *Event) GetRemote() *RemoteControl {
	if m != nil {
		return m.Remote
	}
	return nil
}

func init() {
	proto.RegisterType((*Speed)(nil), "elegoo.Speed")
	proto.RegisterType((*Command)(nil), "elegoo.Command")
	proto.RegisterType((*UltraSonic)(nil), "elegoo.UltraSonic")
	proto.RegisterType((*InfraRed)(nil), "elegoo.InfraRed")
	proto.RegisterType((*RemoteControl)(nil), "elegoo.RemoteControl")
	proto.RegisterType((*Event)(nil), "elegoo.Event")
}

func init() { proto.RegisterFile("elegoo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x66, 0x6d, 0x1b, 0xe3, 0xb4, 0x81, 0xba, 0x20, 0x04, 0xf1, 0x50, 0x23, 0x48, 0x2f, 0xf6,
	0x50, 0x7d, 0x81, 0x36, 0x55, 0x14, 0x73, 0x9a, 0xe8, 0xc5, 0x5b, 0x6c, 0xa7, 0x12, 0x4c, 0x76,
	0xc2, 0x76, 0x11, 0x7c, 0x21, 0x9f, 0x53, 0xb2, 0xbb, 0x31, 0x78, 0xdb, 0x6f, 0xf6, 0xdb, 0xef,
	0x67, 0x07, 0x26, 0x54, 0xd1, 0x07, 0xf3, 0xa2, 0xd1, 0x6c, 0x58, 0x06, 0x0e, 0x25, 0x2b, 0x18,
	0xe5, 0x0d, 0xd1, 0x4e, 0x4e, 0x40, 0x64, 0xb1, 0x98, 0x89, 0xf9, 0x29, 0x8a, 0xac, 0x45, 0x18,
	0x1f, 0x39, 0x84, 0xf2, 0x02, 0x4e, 0x72, 0xc3, 0xcd, 0x6a, 0x6f, 0x48, 0xc7, 0x83, 0x99, 0x98,
	0x47, 0xd8, 0x0f, 0x92, 0x35, 0x1c, 0xa7, 0x5c, 0xd7, 0x85, 0xda, 0xc9, 0x2b, 0xaf, 0x66, 0x85,
	0xc6, 0xcb, 0x68, 0xe1, 0x3d, 0xed, 0x10, 0xbd, 0x93, 0x84, 0x61, 0xc6, 0xfc, 0xe9, 0xe5, 0xed,
	0x39, 0x79, 0x00, 0x78, 0xad, 0x8c, 0x2e, 0x72, 0x56, 0xe5, 0x56, 0x9e, 0x43, 0xb8, 0x29, 0x0f,
	0xa6, 0x50, 0x5b, 0xb2, 0x4a, 0x11, 0xfe, 0xe1, 0x36, 0xcb, 0xa6, 0xd4, 0xb4, 0x35, 0x25, 0x2b,
	0x2f, 0xd1, 0x0f, 0x92, 0x3b, 0x08, 0x9f, 0xd4, 0x5e, 0x17, 0xe8, 0x1a, 0xa1, 0x7d, 0x1e, 0xb6,
	0x1d, 0x26, 0x20, 0x52, 0xcb, 0x0f, 0x51, 0xa4, 0xae, 0xed, 0xc0, 0xa1, 0x2c, 0xb9, 0x84, 0x08,
	0xa9, 0x66, 0x43, 0x29, 0x2b, 0xa3, 0xb9, 0x92, 0x53, 0x18, 0x3c, 0xd3, 0xb7, 0xf7, 0x6e, 0x8f,
	0xc9, 0x8f, 0x80, 0xd1, 0xfd, 0x17, 0x29, 0xd3, 0x06, 0x78, 0x29, 0x6b, 0xca, 0x4d, 0x51, 0x37,
	0x9e, 0xd1, 0x0f, 0xe4, 0x35, 0x0c, 0x1f, 0xa9, 0xd8, 0x59, 0xa7, 0xf1, 0x52, 0x76, 0x1f, 0xd0,
	0x97, 0x43, 0x7b, 0x2f, 0xe7, 0x10, 0xe4, 0xa4, 0x0e, 0xec, 0xfe, 0x73, 0xbc, 0x9c, 0x76, 0xcc,
	0x2e, 0x3e, 0xfa, 0x7b, 0x79, 0x03, 0x81, 0x0b, 0x17, 0x0f, 0x2d, 0xf3, 0xac, 0x63, 0xfe, 0x8b,
	0x8c, 0x9e, 0xb4, 0x0e, 0xdf, 0xfc, 0x6a, 0xdf, 0x03, 0xbb, 0xe9, 0xdb, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xc4, 0x2c, 0x4b, 0xbb, 0xf9, 0x01, 0x00, 0x00,
}
