/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Dec 11 01:03:09 2017. */

#ifndef PB_ELEGOO_ELEGOO_PB_H_INCLUDED
#define PB_ELEGOO_ELEGOO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _elegoo_Command {
    int32_t SpeedR;
    int32_t SpeedL;
    bool Stop;
    uint32_t Direction;
    uint32_t StopAfter;
/* @@protoc_insertion_point(struct:elegoo_Command) */
} elegoo_Command;

typedef struct _elegoo_Events {
    uint32_t Distance;
    int32_t Direction;
    bool SensorR;
    bool SensorC;
    bool SensorL;
    uint32_t KeyPress;
    uint32_t Time;
/* @@protoc_insertion_point(struct:elegoo_Events) */
} elegoo_Events;

/* Default values for struct fields */

/* Initializer values for message structs */
#define elegoo_Command_init_default              {0, 0, 0, 0, 0}
#define elegoo_Events_init_default               {0, 0, 0, 0, 0, 0, 0}
#define elegoo_Command_init_zero                 {0, 0, 0, 0, 0}
#define elegoo_Events_init_zero                  {0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define elegoo_Command_SpeedR_tag                1
#define elegoo_Command_SpeedL_tag                2
#define elegoo_Command_Stop_tag                  3
#define elegoo_Command_Direction_tag             4
#define elegoo_Command_StopAfter_tag             5
#define elegoo_Events_Distance_tag               1
#define elegoo_Events_Direction_tag              2
#define elegoo_Events_SensorR_tag                3
#define elegoo_Events_SensorC_tag                4
#define elegoo_Events_SensorL_tag                5
#define elegoo_Events_KeyPress_tag               6
#define elegoo_Events_Time_tag                   7

/* Struct field encoding specification for nanopb */
extern const pb_field_t elegoo_Command_fields[6];
extern const pb_field_t elegoo_Events_fields[8];

/* Maximum encoded size of messages (where known) */
#define elegoo_Command_size                      26
#define elegoo_Events_size                       30

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ELEGOO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
